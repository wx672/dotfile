# Configuration for Alacritty, the GPU enhanced terminal emulator

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty it self.
env:
  TERM: screen-256color

window:
  dimensions:
    columns: 106
    lines: 27
  opacity: 1.0

  padding:
    x: 0
    y: 0

  class:
    instance: Alacritty
    general: Xterm

  gtk_theme_variant: None

font:
  normal:
    family: "FiraCode Nerd Font"
    style: Retina

  bold:
    family: "FiraCode Nerd Font"
    style: Bold

  italic:
    family: "FiraCode Nerd Font"
    style: Italic

  # Point size of the font
  size: 16.0

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: false

# To completely disable the visual bell, set its duration to 0.
#
bell:
  animation: EaseOutExpo
  color: '0xffffff'
  duration: 0

# Key bindings
#
# Key bindings are specified as a list of objects. Each binding will specify a
# key and modifiers required to trigger it, terminal modes where the binding is
# applicable, and what should be done when the key binding fires. It can either
# send a byte sequence to the running application (`chars`), execute a
# predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Bindings are always filled by default, but will be replaced when a new binding
# with the same triggers is defined. To unset a default binding, it can be
# mapped to the `None` action.
#
# Example:
#   `- { key: V, mods: Control|Shift, action: Paste }`
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
#   Instead of using the name of the keys, the `key` field also supports using
#   the scancode of the desired key. Scancodes have to be specified as a
#   decimal number.
#   This command will allow you to display the hex scancodes for certain keys:
#     `showkey --scancodes`
#
# Values for `mods`:
#   - Command
#   - Control
#   - Option
#   - Super
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ClearLogNotice
#   - SpawnNewInstance
#   - ToggleFullscreen
#   - None
#
# Values for `action` (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad
#
key_bindings:
  - { key: Insert,   mods: Shift,       action: Paste                        }
# - { key: V,        mods: Control,       action: Paste                        }
# - { key: C,        mods: Control,       action: Copy                         }
# - { key: Q,        mods: Control,       action: Quit                         }
# - { key: N,        mods: Control,       action: SpawnNewInstance             }
# - { key: Return,   mods: Control,       action: ToggleFullscreen             }

# - { key: Home,                          chars: "\x1bOH",   mode: AppCursor   }
# - { key: Home,                          chars: "\x1b[H",   mode: ~AppCursor  }
# - { key: End,                           chars: "\x1bOF",   mode: AppCursor   }
# - { key: End,                           chars: "\x1b[F",   mode: ~AppCursor  }
  - { key: Equals,   mods: Control,       action: IncreaseFontSize             }
  - { key: Minus,    mods: Control,       action: DecreaseFontSize             }
# - { key: Minus,    mods: Control|Shift, action: ResetFontSize                }
# - { key: PageUp,   mods: Shift,         chars: "\x1b[5;2~"                   }
# - { key: PageUp,   mods: Control,       chars: "\x1b[5;5~"                   }
# - { key: PageUp,                        chars: "\x1b[5~"                     }
# - { key: PageDown, mods: Shift,         chars: "\x1b[6;2~"                   }
# - { key: PageDown, mods: Control,       chars: "\x1b[6;5~"                   }
# - { key: PageDown,                      chars: "\x1b[6~"                     }
# - { key: Left,     mods: Shift,         chars: "\x1b[1;2D"                   }
# - { key: Left,     mods: Control,       chars: "\x1b[1;5D"                   }
#  - { key: Left,     mods: Alt,           chars: "\x1b[1;3D"                   }
#  - { key: Left,                          chars: "\x1b[D",   mode: ~AppCursor  }
#  - { key: Left,                          chars: "\x1bOD",   mode: AppCursor   }
#  - { key: Right,    mods: Shift,         chars: "\x1b[1;2C"                   }
#  - { key: Right,    mods: Control,       chars: "\x1b[1;5C"                   }
#  - { key: Right,    mods: Alt,           chars: "\x1b[1;3C"                   }
#  - { key: Right,                         chars: "\x1b[C",   mode: ~AppCursor  }
#  - { key: Right,                         chars: "\x1bOC",   mode: AppCursor   }
#  - { key: Up,       mods: Shift,         chars: "\x1b[1;2A"                   }
#  - { key: Up,       mods: Control,       chars: "\x1b[1;5A"                   }
#  - { key: Up,       mods: Alt,           chars: "\x1b[1;3A"                   }
#  - { key: Up,                            chars: "\x1b[A",   mode: ~AppCursor  }
#  - { key: Up,                            chars: "\x1bOA",   mode: AppCursor   }
#  - { key: Down,     mods: Shift,         chars: "\x1b[1;2B"                   }
#  - { key: Down,     mods: Control,       chars: "\x1b[1;5B"                   }
#  - { key: Down,     mods: Alt,           chars: "\x1b[1;3B"                   }
#  - { key: Down,                          chars: "\x1b[B",   mode: ~AppCursor  }
#  - { key: Down,                          chars: "\x1bOB",   mode: AppCursor   }
  - { key: Tab,      mods: Shift,         chars: "\x1b[Z"                      }
  - { key: F1,                            chars: "\x1bOP"                      }
  - { key: F2,                            chars: "\x1bOQ"                      }
  - { key: F3,                            chars: "\x1bOR"                      }
  - { key: F4,                            chars: "\x1bOS"                      }
  - { key: F5,                            chars: "\x1b[15~"                    }
  - { key: F6,                            chars: "\x1b[17~"                    }
  - { key: F7,                            chars: "\x1b[18~"                    }
  - { key: F8,                            chars: "\x1b[19~"                    }
  - { key: F9,                            chars: "\x1b[20~"                    }
  - { key: F10,                           chars: "\x1b[21~"                    }
  - { key: F11,                           chars: "\x1b[23~"                    }
  - { key: F12,                           chars: "\x1b[24~"                    }
  - { key: Back,                          chars: "\x7f"                        }
  - { key: Back,     mods: Alt,           chars: "\x1b\x7f"                    }
  - { key: Insert,                        chars: "\x1b[2~"                     }
  - { key: Delete,                        chars: "\x1b[3~"                     }

    # shortcuts for tmux. the leader key is control-b (0x02)
#  - { key: W,        mods: Command,       chars: "\x02&"                       }  # close tab (kill)
#  - { key: T,        mods: Command,       chars: "\x02c"                       }  # new tab
#  - { key: RBracket, mods: Command|Shift, chars: "\x02n"                       }  # select next tab
#  - { key: LBracket, mods: Command|Shift, chars: "\x02p"                       }  # select previous tab
#  - { key: RBracket, mods: Command,       chars: "\x02o"                       }  # select next pane
#  - { key: LBracket, mods: Command,       chars: "\x02;"                       }  # select last (previously used) pane
#  - { key: F,        mods: Command,       chars: "\x02/"                       }  # search (upwards) (see tmux.conf)

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: true

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: true

mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

cursor:
  # Cursor style
  #
  # Values for 'style':
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true

# dynamic_title: false

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set shell.program to the path of your favorite shell, e.g. /bin/fish.
# Entries in shell.args are passed unmodified as arguments to the shell.
shell:
  program: /bin/bash
  #  args:
  # --command=tmux

debug:
  render_timer: false
  persistent_logging: false
  log_level: OFF
  print_events: false
  ref_test: false

###### Color schemes ######

color_schemes:
  ayu_light: &ayu_light
    primary:
      background: '0xfafafa'
      foreground: '0x5c6773'

    cursor:
      text:   '0x5c6773'
      cursor: '0xff6a00'

    normal:
      black:   '0x000000'
      red:     '0xff3333'
      green:   '0x86b300'
      yellow:  '0xf29718'
      blue:    '0x41a6d9'
      magenta: '0xf07178'
      cyan:    '0x4dbf99'
      white:   '0xffffff'
        
    bright:
      black:   '0x323232'
      red:     '0xff6565'
      green:   '0xb8e532'
      yellow:  '0xffc94a'
      blue:    '0x73d8ff'
      magenta: '0xffa3aa'
      cyan:    '0x7ff1cb'
      white:   '0xffffff'

    indexed_colors: []

  ayu_dark: &ayu_dark
    primary:
      # background: '0x0f1419'
      background: '0x000000'
      foreground: '0xe6e1cf'

    normal:
      black:   '0x000000'
      red:     '0xf34a4a'
      green:   '0xbae67e'
      yellow:  '0xffee99'
      blue:    '0x73d0ff'
      magenta: '0xd4bfff'
      cyan:    '0x83CEC6'
      white:   '0xf2f2f2'

    bright:
      black:   '0x737d87'
      red:     '0xff3333'
      green:   '0xc2d94c'
      yellow:  '0xe7c547'
      blue:    '0x59c2ff'
      magenta: '0xb77ee0'
      cyan:    '0x5ccfe6'
      white:   '0xffffff'

  pink_moon: &pink_moon
    primary:
      background: '0x2a2e38'
      foreground: '0xF0FDFF'
      
    normal:
      black:   '0x2a2e38'
      red:     '0xd08785'
      green:   '0x6f98b3'
      yellow:  '0xfdf8ce'
      blue:    '0xa6b8cc'
      magenta: '0xfcdbd9'
      cyan:    '0xffd17f'
      white:   '0xf0fdff'

    bright:
      black:   '0x71798a'
      red:     '0xff3334'
      green:   '0x9ec400'
      yellow:  '0xe7c547'
      blue:    '0x7aa6da'
      magenta: '0xb77ee0'
      cyan:    '0x54ced6'
      white:   '0xffffff'

    dim:
      black:   '0x333333'
      red:     '0xf2777a'
      green:   '0x99cc99'
      yellow:  '0xffcc66'
      blue:    '0x6699cc'
      magenta: '0xcc99cc'
      cyan:    '0x66cccc'
      white:   '0xdddddd'

    cursor:
      text: '0x2a2e38'
      # cursor: '0x71798a'
      # cursor: '0xF0FDFF'
      # cursor: '0xe6d3c6'
      cursor: '0xffd17f'
      
    selection:
      text: '0x2a2e38'
      cursor: '0xF0FDFF'

    indexed_colors: []

  dracula: &dracula
    primary:
      background: '0x282a36'
      foreground: '0xf8f8f2'
 
    normal:
      black:   '0x000000'
      red:     '0xff5555'
      green:   '0x50fa7b'
      yellow:  '0xf1fa8c'
      blue:    '0xbd93f9'
      magenta: '0xff79c6'
      cyan:    '0x8be9fd'
      white:   '0xbbbbbb'
 
    bright:
      black:   '0x555555'
      red:     '0xff5555'
      green:   '0x50fa7b'
      yellow:  '0xf1fa8c'
      blue:    '0xcaa9fa'
      magenta: '0xff79c6'
      cyan:    '0x8be9fd'
      white:   '0xffffff'

  gruvbox_dark: &gruvbox_dark
    primary:
      background: '0x282828'
      foreground: '0xebdbb2'
  
    normal:
      black:   '0x282828'
      red:     '0xcc241d'
      green:   '0x98971a'
      yellow:  '0xd79921'
      blue:    '0x458588'
      magenta: '0xb16286'
      cyan:    '0x689d6a'
      white:   '0xa89984'
  
    bright:
      black:   '0x928374'
      red:     '0xfb4934'
      green:   '0xb8bb26'
      yellow:  '0xfabd2f'
      blue:    '0x83a598'
      magenta: '0xd3869b'
      cyan:    '0x8ec07c'
      white:   '0xebdbb2'

  tomorrow_night: &tomorrow_night
    primary:
      background: '0x1d1f21'
      foreground: '0xc5c8c6'
  
    cursor:
      text: '0x1d1f21'
      cursor: '0xffffff'
  
    normal:
      black:   '0x1d1f21'
      red:     '0xcc6666'
      green:   '0xb5bd68'
      yellow:  '0xe6c547'
      blue:    '0x81a2be'
      magenta: '0xb294bb'
      cyan:    '0x70c0ba'
      white:   '0x373b41'
  
    bright:
      black:   '0x666666'
      red:     '0xff3334'
      green:   '0x9ec400'
      yellow:  '0xf0c674'
      blue:    '0x81a2be'
      magenta: '0xb77ee0'
      cyan:    '0x54ced6'
      white:   '0x282a2e'
      
  material: &material
    primary:
      background: '0x1e282d'
      foreground: '0xc4c7d1'
  
    normal:
      black:   '0x666666'
      red:     '0xeb606b'
      green:   '0xc3e88d'
      yellow:  '0xf7eb95'
      blue:    '0x80cbc4'
      magenta: '0xff2f90'
      cyan:    '0xaeddff'
      white:   '0xffffff'
  
    bright:
      black:   '0xff262b'
      red:     '0xeb606b'
      green:   '0xc3e88d'
      yellow:  '0xf7eb95'
      blue:    '0x7dc6bf'
      magenta: '0x6c71c4'
      cyan:    '0x35434d'
      white:   '0xffffff'
      
  iterm: &iterm
    primary:
      background: '0x101421'
      foreground: '0xfffbf6'
  
    normal:
      black:   '0x2e2e2e'
      red:     '0xeb4129'
      green:   '0xabe047'
      yellow:  '0xf6c744'
      blue:    '0x47a0f3'
      magenta: '0x7b5cb0'
      cyan:    '0x64dbed'
      white:   '0xe5e9f0'
  
    bright:
      black:   '0x565656'
      red:     '0xec5357'
      green:   '0xc0e17d'
      yellow:  '0xf9da6a'
      blue:    '0x49a4f8'
      magenta: '0xa47de9'
      cyan:    '0x99faf2'
      white:   '0xffffff'
      
  nord: &nord
    primary:
      background: '0x2E3440'
      foreground: '0xD8DEE9'
    cursor:
      text: '0x2E3440'
      cursor: '0xD8DEE9'
    normal:
      black: '0x3B4252'
      red: '0xBF616A'
      green: '0xA3BE8C'
      yellow: '0xEBCB8B'
      blue: '0x81A1C1'
      magenta: '0xB48EAD'
      cyan: '0x88C0D0'
      white: '0xE5E9F0'
    bright:
      black: '0x4C566A'
      red: '0xBF616A'
      green: '0xA3BE8C'
      yellow: '0xEBCB8B'
      blue: '0x81A1C1'
      magenta: '0xB48EAD'
      cyan: '0x8FBCBB'
      white: '0xECEFF4'
      
colors: *ayu_dark

