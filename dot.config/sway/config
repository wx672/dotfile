# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

set $display1 HDMI-A-1
set $display2 eDP-1

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

set $term "alacritty -e tmux"
set $browser qutebrowser
set $wlist "~/.config/sway/windowlist.sh"

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --

set $screenshot grim /tmp/$(date +"%Y%m%d%H%M%S").png
set $screenclip slurp | grim -g - /tmp/$(date +"%Y%m%d%H%M%S").png

set $cl_high #009ddc
set $cl_indi #d9d8d8
set $cl_back #231f20
set $cl_fore #d9d8d8
set $cl_urge #ee2e24

# Colors                border   bg       text     indi     childborder
client.focused          $cl_high $cl_high $cl_fore $cl_indi $cl_high
client.focused_inactive $cl_back $cl_back $cl_fore $cl_back $cl_back
client.unfocused        $cl_back $cl_back $cl_fore $cl_back $cl_back
client.urgent           $cl_urge $cl_urge $cl_fore $cl_urge $cl_urge

default_border none
default_floating_border none
hide_edge_borders both
font pango:Sans 0
titlebar_border_thickness 0
titlebar_padding 0

smart_gaps on
gaps inner 10

# Autostart
exec --no-startup-id udiskie -F
exec --no-startup-id fcitx5 -d --replace
exec --no-startup-id mako
exec  $term
# exec --no-startup-id keynav
# exec --no-startup-id xbanish

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0

output $display1 mode 1920x1080 pos 0,0
output $display2 mode 1920x1080 pos 0,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
input * {
    xkb_layout "us"
    xkb_variant ""
    xkb_options "ctrl:nocaps"
}
input type:keyboard xkb_model "pc105"

input "2:14:ETPS/2_Elantech_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
bindsym $mod+t exec $term
bindsym $mod+q exec $browser
bindsym $mod+e exec emacsclient -c -n
bindsym $mod+l exec $wlist

bindsym $mod+Control+p exec $screenshot
bindsym $mod+Shift+p exec $screenclip

    # Kill focused window
    bindsym $mod+Shift+w kill

    # Start your launcher
    bindsym $mod+Escape exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
#    bindsym $mod+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

#
# Moving around:
#
# Move your focus around
# bindsym $mod+j focus down
# bindsym $mod+k focus up
# bindsym $mod+h focus left
# bindsym $mod+l focus right
bindsym $mod+Tab focus next
# bindsym $mod+o focus last
# bindsym $mod+n focus next
# bindsym $mod+p focus prev
bindsym $mod+j focus next
bindsym $mod+k focus prev

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    bindsym $mod+period workspace next
    bindsym $mod+o workspace back_and_forth

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
#    bindsym $mod+s layout stacking
#    bindsym $mod+w layout tabbed
#    bindsym $mod+e layout toggle split
bindsym $mod+space layout toggle tabbed split

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Make the current focus fullscreen
bindsym $mod+backspace fullscreen

    # Swap focus between the tiling area and the floating area
#   bindsym $mod+Shift+space focus mode_toggle

    # Move focus to the parent container
#   bindsym $mod+a focus parent

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
#   bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
#   bindsym $mod+minus scratchpad show

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Mode containers
bindsym $mod+m mode "move"
mode "move" {
  bindsym h move left 10px
  bindsym j move down 10px
  bindsym k move up 10px
  bindsym l move right 10px

  bindsym Return mode "default"
  bindsym Escape mode "default"
}
   
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set +5%
# bindsym XF86AudioPlay exec playerctl play-pause
# bindsym XF86AudioNext exec playerctl next
# bindsym XF86AudioPrev exec playerctl previous
# bindsym XF86Search exec bemenu-run

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

include /etc/sway/config.d/*
