#!/bin/bash
#
# screencast streaming
#

URL="udp://224.0.0.1:2000"

server(){ 
	cmdchk screenkey picom ffmpeg || return 127

  trap 'pkill screenkey' INT EXIT TERM ERR

	pidof -q picom || picom -b

  (screenkey --no-systray \
					   --opacity 0.0 \
					   --font-color red \
					   --font "monospace" \
					   --font-size small &)
    
  ffmpeg -f x11grab \
			   -video_size 1366x768 \
			   -r 15 \
			   -i :0.0 \
         -c:v libx264 \
			   -tune zerolatency \
         -vf "format=yuv420p" \
			   -g 30 \
         -preset ultrafast \
         -f mpegts \
			   $URL 
}

client(){ # multicast client side

	local MPVOPTS="--no-resume-playback --no-audio --profile=low-latency --no-cache --untimed --no-demuxer-thread --vd-lavc-threads=1"

	cmdchk mpv || {
		timeout 2 rofi -theme alert -e "mpv is missing!"
		return 127
	}

	if pidof -q 'mpv'; then
		timeout 2 rofi -theme alert -e "mpv is running already."
	else
		[ $DISPLAY ] && {
			timeout 1 rofi -theme alert -e "Starting mpv..."
	
			mpv $URL $MPVOPTS
		} || {
			mpv $URL $MPVOPTS --vo=drm --profile=sw-fast 
		}
	fi
}

case $1 in
	client) client ;;
	server) server ;;
	*)
		echo Usage: $0 '<client|server>'
		exit 1
esac

# https://trac.ffmpeg.org/wiki/StreamingGuide
# https://stackoverflow.com/questions/16658873/how-to-minimize-the-delay-in-a-live-streaming-with-ffmpeg
