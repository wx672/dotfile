#!/bin/bash

usage(){
    cat <<EOF
USAGE: $(basename $0) [-h] [-n] [-c x,y] [-w width] [-s s,t] [-t y,m,d] [-p x,y] [-S picture|text] <background>

EXAMPLES:
1. $(basename $0) -w10cm -c'4,13' -S'../analysis-improve.pdf' -n net-20201152-analysis.pdf
2. $(basename $0) -c'5,25.2' -p'10.5,25.2' -s'1,1' -S'开卷机试' -t'2021,1,21' -n net-20201152-analysis-signed.pdf
3. $(basename $0) -c'4.2,1' -p'12,1' -s'1.2,1' -t'2021,1,20' -S'\sig 王晓林' -n pg_0001.pdf
4. $(basename $0) -S'\purisa 2020\quad 5\qquad 8' paper.pdf

background - paper to sign;
        -h - help
        -S - signature picture or text. Default='{.,..}/signature.pdf' if found;
        -n - hide grid;
        -c - coordinate of signature. Default='12,6';
        -p - coordinate for year/month/date. Default='12,5';
        -t - timestamp, e.g. '2020,5,8';
        -w - width of signature picture. Default=25mm.
        -s - scale of signature text and timestamp. Default='1.4,.85';
EOF
}

cleanup(){
	rm -f $AUX $LOG $TEXFILE
}

#######color code########
ERR="31m"     # red
SUCCESS="36m" # green
WARN="32m"    # yellow
INFO="34m"    # blue

colorEcho(){
    echo -e "\033[${1}${@:2}\033[0m" 1>& 2
}

grid(){
	cat <<EOF >> $TEXFILE
\documentclass[tikz]{standalone}
\usetikzlibrary{backgrounds}
\usepackage[scheme=plain]{ctex}
\newCJKfontfamily\sig{signature}
\newfontfamily\purisa{Purisa}
\begin{document}
\begin{tikzpicture}[inner sep=0,anchor=south west]
    \node (bg) at (0,0) {\includegraphics[width=\paperwidth]{$BG}};

	\begin{scope}
	%%% grid
	\draw[help lines,red,step=1] (0,0) grid (20,30);%
	\foreach \x in {1,2,...,19} { \node at (\x,0) {\x}; }%
	\foreach \y in {1,2,...,29} { \node at (0,\y) {\y}; }%
EOF
	if [[ -f "$SIG" ]]
	then # sign with a picture
		echo "\node at ($XY) {\includegraphics[width=$WIDTH]{$SIG}};" >> $TEXFILE
	else # sign with text
		SIGSCALE=$(echo $SCALE | cut -d, -f1);
		echo "\node at ($XY) [scale=$SIGSCALE] {$SIG};" >> $TEXFILE
	fi

	[[ -n $TIMESTAMP ]] && {
		Y=$(echo $TIMESTAMP | cut -d, -f1);
		M=$(echo $TIMESTAMP | cut -d, -f2);
		D=$(echo $TIMESTAMP | cut -d, -f3);
		YMDSCALE=$(echo $SCALE | cut -d, -f2);
		cat<<EOF >> $TEXFILE;
\node at ($YMD)[scale=$YMDSCALE,fill=white] {\makebox[8.5em][s]{$Y 年 $M 月 $D 日}};
EOF
	}

	cat <<EOF >> $TEXFILE
    \end{scope}
	\end{tikzpicture}
\end{document}
EOF
}

nogrid(){
	cat <<EOF >> $TEXFILE
\documentclass[tikz]{standalone}
\usetikzlibrary{backgrounds}
\usepackage[scheme=plain]{ctex}
\newCJKfontfamily\sig{signature}
\newfontfamily\purisa{Purisa}
\begin{document}
\begin{tikzpicture}[inner sep=0,anchor=south west]
    \node (bg) at (0,0) {\includegraphics[width=\paperwidth]{$BG}};
	\begin{scope}
EOF
	if [[ -f "$SIG" ]]
	then # sign with a picture
		echo "\node at ($XY) {\includegraphics[width=$WIDTH]{$SIG}};" >> $TEXFILE
	else # sign with text
		SIGSCALE=$(echo $SCALE | cut -d, -f1);
		echo "\node at ($XY) [scale=$SIGSCALE] {$SIG};" >> $TEXFILE
	fi

	[[ -n $TIMESTAMP ]] && {
		Y=$(echo $TIMESTAMP | cut -d, -f1);
		M=$(echo $TIMESTAMP | cut -d, -f2);
		D=$(echo $TIMESTAMP | cut -d, -f3);
		YMDSCALE=$(echo $SCALE | cut -d, -f2);
		cat<<EOF >> $TEXFILE;
\node at ($YMD)[scale=$YMDSCALE,fill=white] {\makebox[8.5em][s]{$Y 年 $M 月 $D 日}};
EOF
	}
	
	cat <<EOF >> $TEXFILE
    \end{scope}
	\end{tikzpicture}
\end{document}
EOF
}

trap cleanup EXIT

# defaults
[[ -e signature.pdf ]] && SIG='signature.pdf'
[[ -e ../signature.pdf ]] && SIG='../signature.pdf'
GRID='g'
XY='12,6'
YMD='7.05,16.15'
WIDTH='25mm'
SCALE='1.4,.85'
TIMESTAMP=''
Y=''
M=''
D=''

while getopts :hnc:p:s:w:t:S: OPT; do
	case $OPT in
		h) usage; exit 0 ;;
		n) GRID='ng' ;;
		c) XY="$OPTARG" ;;
		p) YMD="$OPTARG" ;;
		s) SCALE="$OPTARG" ;;
		w) WIDTH="$OPTARG" ;;
		t) TIMESTAMP="$OPTARG" ;;
		S) SIG="$OPTARG" ;;
		?) usage; exit 2
	esac
done
shift $(( OPTIND - 1 ))
OPTIND=1

BG="$@"
[[ -f "$BG" ]] || { colorEcho $ERR "ERROR: <${BG:-BACKGROUND}> NOT FOUND."; usage; exit 1; }

TEXFILE="${BG%.pdf}-signed.tex"
PDF="${TEXFILE%.tex}.pdf"
LOG="${TEXFILE%.tex}.log"
AUX="${TEXFILE%.tex}.aux"

case "$GRID" in
	g)
		colorEcho $INFO "Signing with grid..."
		grid
		;;
	ng)
		colorEcho $INFO "Signing without grid..."
		nogrid
		;;
esac

colorEcho $INFO "Signing <$BG>..."
xelatex $TEXFILE > /dev/null

[[ -f "$PDF" ]] || { colorEcho $ERR "Failed generating PDF file. Please check <$LOG> file for details"; exit 5;}

{ colorEcho $SUCCESS 'DONE!'; ls -l $PDF; }


