#!/bin/bash

cmdchk yq || exit 127

cfgDir="$HOME/.config/mihomo"
SELFYML="$cfgDir/wx672.yaml"
DEFAULTYML="$cfgDir/config.yaml"
ymlDir="$cfgDir/yml"
unset PROXY_NAME PROXY_ENTRY OUTFILE

usage() {
  cat <<EOF
${0##*/} - Tweaking mihomo config file.

USAGE: 
    ${0##*/} -i [file.yaml] # insert a proxy entry into $SELFYML
			    
    ${0##*/} -r [file.yaml] # remove a proxy entry from a yml file (default $DEFAULTYML)
			    
    ${0##*/} -s [file.yaml] # search by proxy name

    ${0##*/} [-o output.yaml] -t [newlydownloaded.yaml]  # tweak newly downloaded yaml file

    ${0##*/}  # without any options, works as 'clashy -t'

    - Prerequisite: yq
EOF
  exit ${1:-0}
}

    # - Before insert/remove an entry, you need to put its proxy name onto the clipboard first. To list all the proxy names, you can use yq:

        # \$ yq '.proxies[].name' config.yaml


# doublecheck <SRC.yml> <DST.yml>
# populate PROXY_NAME and PROXY_ENTRY
doublecheck() {
  local SRC="$1"
  local DST="$2"
  PROXY_NAME="$(yq '.proxies[].name' $SRC | sk -e10)"

  PROXY_ENTRY=$(NAME="$PROXY_NAME" yq '.proxies[] | select(.name == strenv(NAME))' "$SRC")

  cat <<EOF
---
Name: $(echo $PROXY_NAME)
Proxy entry:
$(echo $PROXY_ENTRY)
---
EOF

  [ "$PROXY_ENTRY" ] || {
    echo "[doublecheck] yq: Proxy entry not found in $SRC!"
    exit
  }

  cat <<EOF
$DST
--- q to quit, any other key to continue ---
EOF

  while read -s -n1; do
    case $REPLY in
      q) exit ;;
      *) break ;;
    esac
  done

  return
}

insert() {
  local SRC=${1:-$DEFAULTYML}
  local DST=${2:-$SELFYML}

  doublecheck "$SRC" "Insert the above entry into ${DST##*/}?"

  sed -i "/^proxies:$/a\  - $PROXY_ENTRY" $DST || {
    echo '[insert] sed: Failed appending!'
    exit 1
  }
  yq '.proxies[0]' $DST || {
    echo '[insert] yq: Failed updating .proxies[0]!'
    exit 1
  }

  yq -i '.proxy-groups[1].proxies = [.proxies[0].name] + .proxy-groups[1].proxies' \
    $DST || {
      echo '[insert] yq: Failed updating .proxy-groups[1].proxies!'
      exit 1
    }

  yq '.proxy-groups[1].proxies' $DST || exit 1

  exit
}

# remove <SRC.yaml>
remove() {
  local SRC="${1:-$DEFAULTYML}"

  doublecheck "$SRC" "Remove the above entry from ${SRC##*/}?"

  NAME="$PROXY_NAME" \
    yq -i 'del(.proxy-groups[].proxies[] | select(. == strenv(NAME)))' $SRC || {
      cat <<ERR
[remove] yq.del() failed:

NAME="$PROXY_NAME" \
		yq -i 'del(.proxy-groups[].proxies[] | select(. == strenv(NAME)))' $SRC
ERR
      exit 1
    }

  NAME="$PROXY_NAME" \
    yq -i 'del(.proxies[] | select(.name == strenv(NAME)))' $SRC || {
      cat <<ERR
[remove] yq.del() failed:

NAME="$PROXY_NAME" \
		yq -i 'del(.proxies[] | select(.name == strenv(NAME)))' $SRC
ERR
      exit 1
  }

  echo $SRC is updated.

  # tmux send-keys -t{top-right} C-c

  exit
}

# clashy [-o OUTFILE.yml] -t [/tmp/newlydownloaded.yaml]
tweak() {
  local SRC=${1:-$(/bin/ls /tmp/*.yaml | sk -e10)}
  local DST=${OUTFILE:-"$ymlDir/$(date +%m%d).yml"}

  [[ -f "$SRC" ]] && mv "$SRC" "$DST" || {
    echo File "$SRC" does not exist.
    exit 1  
  }

  sed -i '/^#/d' $DST

  sed -i '1,/^proxies:/d' $DST

  sed -i '1i port: 7890\nsocks-port: 7891\nallow-lan: true\nmode: Rule\nlog-level: info\nexternal-controller: 0.0.0.0:9090\nexternal-ui: /home/wx672/.config/mihomo/ui\ndns:\n  enabled: true\n  ipv6: true\n  listen: 127.0.0.1:8854\n  default-nameserver:\n    - 223.5.5.5\n    - 114.114.114.114\n    - 119.29.29.29\n    - 1.0.0.1\n  nameserver:\n    - https://doh.pub/dns-query\n    - https://dns.alidns.com/dns-query\n    - https://223.6.6.6/dns-query\n    - https://rubyfish.cn/dns-query\n    - https://dns.pub/dns-query\n  fallback-filter:\n    geoip: false\n    ipcidr:\n      - 240.0.0.0/4\n      - 0.0.0.0/32\nproxies:' $DST

  yq -i '.rules = ["DOMAIN-SUFFIX,www.pearson.com,DIRECT", "DOMAIN-SUFFIX,stackoverflow.com,DIRECT", "DOMAIN-SUFFIX,stackexchange.com,DIRECT", "DOMAIN-SUFFIX,debian.org,DIRECT", "DOMAIN-SUFFIX,fai-project.org,DIRECT", "DOMAIN-SUFFIX,qemu.org,DIRECT", "DOMAIN-SUFFIX,gnu.org,DIRECT", "DOMAIN-SUFFIX,winegame.net,DIRECT", "DOMAIN-SUFFIX,www.kmwatersupply.com,DIRECT", "DOMAIN-SUFFIX,www.playonlinux.com,DIRECT", "DOMAIN-SUFFIX,sketchviz.com,DIRECT", "DOMAIN-SUFFIX,deepinos.org,DIRECT", "DOMAIN-SUFFIX,overleaf.com,DIRECT", "DOMAIN-SUFFIX,moodle.org,DIRECT", "DOMAIN-SUFFIX,grammarly.com,DIRECT", "DOMAIN-SUFFIX,ixigua.com,DIRECT", "DOMAIN-SUFFIX,gitee.com,DIRECT", "DOMAIN-SUFFIX,wiki.archlinux.org,DIRECT", "DOMAIN-SUFFIX,www.gnupg.org,DIRECT", "DOMAIN-SUFFIX,www.opensubtitles.com,DIRECT"] + .rules' $DST

  yq '.rules' $DST | rg "DOMAIN.*DIRECT"

  sed -i '/CN/d' $DST
  sed -i '/中国/d' $DST
  sed -i '/乌克兰/d' $DST
  sed -i '/南非/d' $DST

  ln -sf $DST $DEFAULTYML

  ls -l $DEFAULTYML

  exit
}

search() {
  local SRC=${1:-"$DEFAULTYML"}
  PROXY_NAME="$(yq '.proxies[].name' $SRC | sk -e10)"
  local ENTRY=$(NAME="$PROXY_NAME" yq '.proxies[] | select(.name == strenv(NAME))' $SRC)
  echo Searching for '['${PROXY_NAME}']' ...

  [ "$ENTRY" ] && { echo $ENTRY | yq; } || {
    echo '[search] yq: Proxy entry not found in' $SRC!
    exit
  }
}

[[ $1 ]] || tweak

while getopts :irsto: OPT; do
  case $OPT in
    i)
      shift $((OPTIND - 1))
      OPTIND=1
      insert
      ;;
    r)
      shift $((OPTIND - 1))
      OPTIND=1
      remove
      ;;
    s)
      shift $((OPTIND - 1))
      OPTIND=1
      search
      ;;
    t)
      shift $((OPTIND - 1))
      OPTIND=1
      tweak 
      ;;
    o)
      OUTFILE="$OPTARG"
      ;;
    *) usage ;;
  esac
done
