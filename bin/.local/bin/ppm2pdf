#!/bin/bash

usage(){
	cat <<EOF
${0##*/} - Convert an image to a much smaller PDF file.

Usage: ${0##*/} <a jpg/png/webp/ppm image>

EOF
}

cleanup(){
	mkdir -p ./trash
	[[ -f "$IMG" ]] && mv "$IMG" ./trash
	rm -f "$TIF" "$PPM"
}

trap cleanup EXIT

#######color code########
ERR="31m"     # red
SUCCESS="32m" # green
WARN="33m"    # yellow
INFO="36m"    # blue

colorEcho(){
    echo -e "\033[${1}${@:2}\033[0m" 1>& 2
}

################

[[ -z "$1" ]] && { usage; exit 1; }

IMG="$@"
[[ -f "$IMG" ]] || { colorEcho $ERR "Image <$IMG> not found!"; usage; exit 1; }

BASE="${IMG%.*}"
PPM="$BASE.ppm"
TIF="$BASE.tif"
PDF="$BASE.pdf"

TYPE=$(file -b --extension "$IMG")
echo "$TYPE" '-> PPM...'

case $TYPE in
    *jpg* ) 
		cmdchk jpegtopnm || exit 127
        jpegtopnm -quiet "$IMG" > "$PPM"
        ;;
    *png* )
		cmdchk pngtopam || exit 127
		pngtopam -quiet -mix -background="#FFF" "$IMG" > "$PPM"
		;;
	*webp* )
		cmdchk dwebp || exit 127
		dwebp -ppm -o "$PPM" "$IMG"
		;;
	*ppm*|*pgm*|*pbm* )
		;;
	* )
		cmdchk convert || exit 127
		convert "$IMG" "$PPM"
		;;
esac

echo 'PPM -> PDF...'

ppm2tiff -c none "$PPM" "$TIF" && tiff2pdf -jFo "$PDF" "$TIF" && {
		echo done.;
		exit 0;
	} || {
		echo ppm -> tiff -> pdf failed;
		cmdchk ppm2tiff || exit 127
		exit 1;
	}
