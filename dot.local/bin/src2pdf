#!/bin/bash

usage(){
    cat <<EOF
Usage: $(basename $0) [-ha] [-f from] [-t to] [-s style] <source files>
-h  help
-a  output in both default and bw style
-s  style (pygmentize -L)
-f  line number of the first line (TODO)
-t  line number of the last line (TODO)
EOF
}

cleanup(){
	rm -rf $SCRATCH
}

trap cleanup EXIT

#######color code########
ERR="31m"     # red
SUCCESS="36m" # green
WARN="32m"    # yellow
INFO="34m"    # blue

colorEcho(){
    echo -e "\033[${1}${@:2}\033[0m" 1>& 2
}
#########################

STYLE=default
SCRATCH=$(mktemp -d)

while getopts :hs:a OPT; do
	case $OPT in
		h) usage; exit 0 ;;
		s) STYLE="$OPTARG" ;;
		a) ALL=1; STYLE=default ;;
		f) FROM="$OPTARG" ;;
		t) TO="$OPTARG" ;;
		?) usage; exit 2
	esac
done
shift $(( OPTIND - 1 ))
OPTIND=1

[ -z "$@" ] && { usage; exit 1; }

#\setmonofont{Latin Modern Mono}
#\setmonofont{Source Code Pro}
#\setmonofont{Monaco Nerd Font Mono}
#\setmonofont{LMMono12 Nerd Font}
#\setCJKmonofont{Noto Sans Mono CJK SC}\setCJKmainfont{Noto Serif CJK SC}\setCJKsansfont{Noto Sans CJK SC}
PREAMBLE='\usepackage{fontspec}\setmonofont{Source Code Pro}\usepackage{xeCJK}\setCJKmonofont{Noto Sans Mono CJK SC}\pagestyle{empty}'

for f in "$@"; do
	if [[ -s "$f" ]]; then
		pygmentize -f tex -O "style=$STYLE,linenos,full,preamble=$PREAMBLE" $f \
			| xelatex -jobname=$(basename $f) -output-directory=$SCRATCH
	else
		echo $ERR "Error: File <$f> not found." && exit 1
	fi

	[[ "$STYLE" = "default" ]] \
		&& pdfcrop $SCRATCH/$(basename $f.pdf) $(basename $f | tr . -).pdf \
		|| pdfcrop $SCRATCH/$(basename $f.pdf) $(basename $f | tr . -)-$STYLE.pdf
	
	(( ALL == 1 )) \
		&& { pygmentize -f tex -O "style=bw,linenos,full,preamble=$PREAMBLE" $f \
				 | xelatex -jobname=$(basename $f) -output-directory=$SCRATCH; \
			 pdfcrop $SCRATCH/$(basename $f.pdf) $(basename $f | tr . -)-bw.pdf; }
done
